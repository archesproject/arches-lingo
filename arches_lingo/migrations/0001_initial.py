# Generated by Django 4.2.15 on 2024-08-22 09:01
import textwrap

from django.contrib.postgres.operations import CreateExtension
from django.db import migrations, models

from arches_lingo.const import CONCEPT_NAME_CONTENT_NODE


class FuzzyStrMatchExtension(CreateExtension):
    def __init__(self):
        super().__init__("fuzzystrmatch")


class Migration(migrations.Migration):

    initial = True

    dependencies = [("models", "11042_update__arches_staging_to_tile")]

    forward = textwrap.dedent(
        f"""
    CREATE VIEW arches_lingo__vw_label_values AS (
    SELECT
        t.resourceinstanceid AS conceptid,
        t.tiledata ->> '{CONCEPT_NAME_CONTENT_NODE}' AS value
    FROM
        tiles t
    ORDER BY
        conceptid
    );"""
    )

    reverse = "DROP VIEW arches_lingo__vw_label_values;"

    operations = [
        migrations.RunSQL(forward, reverse),
        migrations.CreateModel(
            name="VwLabelValue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.CharField(db_column="value")),
            ],
            options={
                "db_table": "arches_lingo__vw_label_values",
                "managed": False,
            },
        ),
        FuzzyStrMatchExtension(),
    ]
